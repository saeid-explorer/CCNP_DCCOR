====================================================================================== CCNP DCCOR - CBT Nuggets - Jeff Kish ================================================================================


~~~~~~~~~~~~~~~~~ Explain BGP Concepts~~~~~~~~~~~~~~~~

** BGP Concepts
  - BGP is an EGP(Exterior Gateway Protocol)
  - EGP is designed to be used between larger networks versus IGP(Interior Gateway Protocl) which is designed to be used within a network(e.g. OSPF)
  - IGPs are mode for speed(They converge rapidly) compared to EGPs which focus on Scale
  - IGPs are Distance Vector or Link State protocols but BGP is Path Vector protocol 
  - BGP has 10+ path attributes which are used for routing

** BGP Peerings
  - AS(Autonomous System) is 16bit number which accounts for 65K AS
  - There are two types of Peerings:
    - eBGP: peering between routers in different ASs
      - AD(Administrative Distance) is 20
    - iBGP: peering which happens within an AS
      - AD(Administrative Distance) is 200
  - BGP peerings are formed across a TCP connection on port 179
    - This means two routers without a direct connection can still form relationship
  - Peers are identified by a Router ID(32bit)
    - Router ID can be assigned manually or Automatically(using the highest Loopback IP or highest other Interface IP address)


** BGP Path Selection
  - Note: Path must be Reachable
  - Here are path selection criteria/attributes sorted by their priority:
      1) Weight
          - the higher the better
          - Cisco-only parameter
          - specifically local to the router
      2) Local Preference
          - the higher the better
          - it's globally shared within an AS
          - in other words, it's a weight that is shared
      3) Locally Originated
          -  prefer the local path to the neighbors' advertised path
      4) AS-PATH
          - the less/shorter the better
          - for example AS-path 400 wins over AS-Path 200-300
      5) Origin
          - the lower the better
          - Origin explains how a Route got into BGP in the first place
            - for example we might use the "Network" command which injects the route natively into BGP (marked by "i" in Routing Table)
            - we might also see "?"(i.e. Incomplete) in Routing table which means the Route is redistributed into BGP 
            - so "i" Origin is prefered over "?" Origin
      6) MED(Multi-Exit Discriminator)
          - the lower the better
          - it's actual cost or metric that we get in BGP
          - this is used to tell others how to come back into my network
          - for example when I have a Router on the Edge of my AS and I have 2 different Paths 2 different Routers in a different AS,
            I can use MED to influence the inboud direction of the packet
      7) eBGP > iBGP Peer
          - Routes received from eBGP peers are preferred over iBGP Routes
      8) Next-Hop - IGP Metric 
      9) Last chosen
      10) Peer Router-ID (Optional)
          - the lower the better
      11) Cluster Length
          - the lower the better
          - Relates to RR(Route Reflector)
      12) Peer IP Address
          - the lower the better


** MP-BGP (MultiProtocol BGP)
  - BGP can route IPv4 and IPv6
  - BGP is an Information Carrying protocol which can protocol lots of information types(e.g. IPv4/IPv6 Multicast, Mac Address)
  - we set the protocol that we want to carry as a subcommand under "router bgp <As#>" command
      - e.g.:
        - router bgp 65500
          - address-family ipv6


~~~~~~~~~~~~~~~~~ Explain Multicast Routing ~~~~~~~~~~~~~~~~

** Multicast Traffic Concepts
  - we have three components
      - Multicast source
      - Multicast receiver
      - Group Address: A class D IP Address that we are sending this multicast traffic stream to
        - Class D Address is in the range of: 224.0.0.0 to 239.255.255.255
        - 239.0.0.0 is the range of private multicast group IDs
  - different types of multicast traffic groups:
        1) Any-Source Multicast(ASM)
            - It's the situation in which we don't care which Source gives us the traffic stream
        2) Source-Specific Multicast(SSM)
            - Allows us to reach out to very specific source on the network and request the source that way
            - It greatly simplifies our multicast deployment because the host knows where exactly the source is
        3) BiDirectional
            - Designed for the situations when we have a lot of sources and a lot of recipients

  - L2 and L3 Multicast
      - L3 Multicast is going to be managed by a protocol called PIM(Protocol Independent Multicast)
          - The goal of PIM is to create Loop-free topology through the entire network that we call it Tree
          - This tree is going to connect the sources to the destinations in a loop-free way inside the network
      - L2 Multicast uses IGMP(Internet Group Management Protocol)
          - IGMP is a protocol that allows clients to request connections to specific multicast streams
          - We can also use a concept called IGMP Snooping in order to prevent Broadcast behaviour



** Protocol Independent Multicast(PIM)
  - PIM's responsibility is to connect the Sources with whatever clients want to receive that particular Multicast stream
  - It's protocol independent because we're relying on a Unicast Routing Protocol to already have been established for us to have
    converged routing(e.g. OSPF, EIGRP) in the Unicast Environment
  - PIM's domain of operation is from Ingress router to Egress router
  - Its responsible for L3 domain of Multicast
  - PIM routers should start by forming PIM neighborship with one another
  - Routers are going to discover each other with a multicast IPv4 address of 224.0.0.13 on IPv6 of FF02::D
  - Multicast Routes are created when a new Source shows up and sends Multicast or when a Receiver shows up and want to join a particular Multicast group
  - command to show Multicast Routing Table:
      - show ip mroute
  - 2 different types of Multicast routes on Multicast Routing Table
      - "S" stands for Source, "G" stands for Group, "*" means we don't know what the source is
      1) (S,G)
      2) (*,G)
~~~~~~~~~~~~~~~~~ Explain VXLAN and EVPN ~~~~~~~~~~~~~~~~

** VXLAN and VNI
  - There are some problems in traditional Data Centers
    - Vlans are limited (4K)
    - We have to use STP, FHRP, VPC which have their own problems
    - We have to use L3 PODs (L3 at edge) which are problematic

 - VXLAN helps us to better scale our network by two primary ways
    1) It will increase the number of Broadcast Domains that are available to us
    2) It's gonna extend L2 over L3

 - When we enable VXLAN on a switch, it's become known as VTEP(VXLAN Tunneling EndPoint)
 - One VLAN is going to be mapped to a single VNI(Virtual Network Identifier)
 - Then each VNI is going to be extended through a L3 boundary and connect to another VTEP which receives the 
   VNIs which has encapsulated the traffic that VXLAN enabled us to send.
 - Then the destination VTEP is going to translate VNI back into the individual VLANs that were originally
   connecting with.

 - VXLAN header is a 8 Byte header
    - 1B -> Flags
    - 3B -> VNI (almost 16Million VLANs)
    - 4B -> Reserved


  - Scoping the VNIs
    - There are two primary ways of scoping VNIs
      1) Network Scope
      2) Local Scope(locally significant VNI)
      
      - Network-wide scope means that if we were to apply a VNI to a particular VLAN, the question we're
        going to ask is whether this VNI is significant only to the local switch or to the entire Network.
      - Scoping Network-wide means that the specific VNI will also get mapped to the same Vlan on the
        destination VTEP
      - Benefit of Network-wide Scoping is that it's SIMPLE(i.e. VNI gonna point to the same VLAN in the
        entire Network)
      - Downside of Network-wide Scoping is Management. Because we have to be a worry about that the specific
        VNI is reserved everywhere and we can't repurpose that VNI by accident anywhere in the Network.


** VXLAN and Leaf-Spine
  - Leaf-Spine is only doable because we have VXLAN

  - Leaf-Spine Architecture
    - We have two layers: 1st layer is Spine and 2nd layer is Leaf
    - we connect every leaf switch to every upstream spine switch
      - we don't connect leaf-to-leaf or spine-to-spine(unline Aggregation-Access Architecture)
    - All of the Intelligence lives at the LEAF layer, not the Spine layer
    - The Spine switch has only one task: to bring traffic in and send back out which enables us to switch traffic
      between Leaf swtiches as fast as possible
    - Leaf-Spine is designed for scaling to very large L2 Fabric in the DataCenters today

  - Leaf-Spine Scaling
    1) we have Independent Scaling of different resources in the data center
        - we have a Backbone layer(Spine Layer) and if we want to increase our Bandwidth or PPS(Packets Per Second),
          we add new Spine Layer Switch
        - If we need Ports(additional connectivity at the Edge), we simply add Leaf switches
    2) Declaring Two-Hop behaviour for all Traffic in Data Center
        - When a packet arrives on a Leaf Switch, it's guaranteed that regardless of where it's heading in the Data Center,
          it's going to get there in precisely 2 Hops(first to Spine and then to the destination Leaf Swtich)

    3) Services
        - We can make our Network Services available very seamlessly throughout the Infrastructure
        - We bring our services(Network Load Balancers, Cloud Gateways, NGFW, AnyCast Gateways) into a pair of leaf switches


  - Application of VXLAN in Leaf-Spine Architecture
        - The ideal situation in Leaf-Spine Architecture is that the connections between Leaf to Spine to be L3(to be able
          to scale this architecture out) to be able to scale out. Otherwise in L2 connections STP gonna cause lot of problems
        - In this case, we can have two hosts on two different Leaf switches which are in the same VLAN. Then we can have these
          subnets stretched out(L2) because they are in the same VLAN and yet our Fabric is L3



** VXLAN Data Plane
    - VXLAN gonnna extend L2 over L3 using Encapsulation
    - The L2 Frame gonna come to source VTEP. Then it will be encapsulated into VXLAN Header
    - Then it will be encapsulated inside UDP Header which has Destination Port of 4789
    - Then It will be encapsulated into IP Header which has Source and Destination IP of Source and Destination VTEPs
    - Then it will send the Encapsulated packet over L3 to the destination VTEP
    - Destination VTEP gonna decapsulate it and get the packet
    - Fragmentaion is not supported by VXLAN
    - Remember increasing MTU

   - MTU increase required on the VXLAN underlay network
      - IP header       -> 20B
      - UDP header      -> 8B
      - VXLAN header    -> 8B
      - Ethernet header -> 14
      - So totally we should add 50 Bytes to the size of Data packet to get our MTU size

** VXLAN Control Plane - Flood and Learn
    - VXLAN lacks a native, dedicated Control Plane, instead it relies on Flood and Learn
    - Traffic is flooded via Multicast across the backbone to all VTEPs
    - Once a destination is learned, the ingress VTEP can forward as unicast
    * BUM(Broadcast, Unknown Unicast, Multicast) Traffic will be sent using  Multicast tree
    - IR(Ingress Replication) is where we have Unicast Backplane
      - it's an alternative method of control plane(for Multicast) which is rarely used
      - we have to manually map VNI to VTEP which takes lots of work
      - we gonna replicate lots of traffic


** VXLAN Control Plane - Ethernet VPN (EVPN)
    - BGP is more of a Information Carrying Protocol(rather than simply a Routing Protocol)
    - MP-BGP(Multi-Protocol BGP) can carry IPv6, MPLS or even MAC and VNI
    - EVPN deploys MP-BGP to exchange IP/MAC/VNI info among VTEPs
    - BGP should also include a RR(Route Reflector) as part of EVPN designs
    - EVPN brings enhancements like Peering(Authentication) and ARP Suppression(Prevent flooding ARP Requests)
    - BUM traffic continues to use Multicast for multi-VTEP delivery


~~~~~~~~~~~~~~~~~ ----------------------- ~~~~~~~~~~~~~~~~
